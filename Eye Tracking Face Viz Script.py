import matplotlib.pyplot as plt
import networkx as nx
import numpy as np

# Complete dataset
data = [
    [0, 0, 0, 0, -0.18], [30, 0, 0, 0, -0.18], [60, 0, 0, 0, -0.18], [90, 0, 0, 0, -0.18],
    [120, 0, 0, 0, -0.18], [150, 0, 0, 0, -0.18], [180, 0, 0, 0, -0.18], [210, 0, 0, 0, -0.18],
    [240, 0, 0, 0, -0.18], [270, 0, 0, 0, -0.18], [300, 0, 0, 0, -0.05], [330, 0, 0, 0, 0.09],
    [360, 0, 0, 0, 0.22], [390, 0, 0, 0, 0.36], [420, 0, 0, 0, 0.49], [450, 0, 0, 0, 0.63],
    [480, 0, 0, 0, 0.76], [510, 0, 0, 0, 0.9], [540, 0, 0, 0, 1.03], [570, 0, 0, 0, 1.17],
    [600, 0, 0, 0, 1.3], [630, 0, 0, 0, 1.44], [660, 0, 0, 0, 1.57], [690, 0, 0, 0, 1.71],
    [720, 0, 0, 0, 1.85], [750, 0, 0, 0, 1.76], [780, 0, 0, 0, 1.55], [810, 0, 0, 0, 1.33],
    [840, 0, 0, 0, 1.11], [870, 0, 0, 0, 0.89], [900, 0, 0, 0, 0.67], [930, 0, 0, 0, 0.53],
    [960, 0, 0, 0, 0.39], [990, 0, 0, 0, 0.25], [1020, 0, 0, 0, 0.1], [1050, 0, 0, 0, -0.04],
    [1080, 0, 0, 0, -0.27], [1110, 0, 0, 0, -0.49], [1140, 0, 0, 0, -0.72], [1170, 0, 0, 0, -0.95],
    [1200, 0, 0, 0, -1.17], [1230, 0, 0, 0, -1.18], [1260, 0, 0, 0, -1.19], [1290, 0, 0, 0, -1.2],
    [1320, 0, 0, 0, -1.21], [1350, 0, 0, 0, -1.22], [1380, 0, 0, 0, -1.23], [1410, 0, 0, 0, -1.2],
    [1440, 0, 0, 0, -1.17], [1470, 0, 0, 0, -1.15], [1500, 0, 0, 0, -1.12], [1530, 0, 0, 0, -1.1],
    [1560, 0, 0, 0, -0.99], [1590, 0, 0, 0, -0.87], [1620, 0, 0, 0, -0.76], [1650, 0, 0, 0, -0.65],
    [1680, 0, 0, 0, -0.6], [1710, 0, 0, 0, -0.55], [1740, 0, 0, 0, -0.5], [1770, 0, 0, 0, -0.45],
    [1800, 0, 0, 0, -0.4], [1830, 0, 0, 0, -0.36], [1860, 0, 0, 0, -0.31], [1890, 0.05, 0, 0, -0.37],
    [1920, 0.05, 0, 0, -0.43], [1950, 0.13, 0, 0.04, -0.49], [1980, 0.13, 0, 0.04, -0.55],
    [2010, 0.13, 0, 0.04, -0.61], [2040, 0.13, 0, 0.04, -0.67], [2070, 0.13, 0, 0.04, -0.73],
    [2100, 0.14, 0, 0.05, -0.79], [2130, 0.14, 0, 0.05, -0.85], [2160, 0.14, 0, 0.05, -0.85],
    [2190, 0.14, 0, 0.05, -0.85], [2220, 0.15, 0, 0.05, -0.85], [2250, 0.15, 0, 0.05, -0.85],
    [2280, 0.15, 0, 0.05, -0.77], [2310, 0.15, 0, 0.05, -0.68], [2340, 0.15, 0, 0.05, -0.59],
    [2370, 0.15, 0, 0.05, -0.51], [2400, 0.15, 0, 0.05, -0.42], [2430, 0.15, 0, 0.05, -0.34],
    [2460, 0.15, 0, 0.05, -0.25], [2490, 0.15, 0, 0.05, -0.16], [2520, 0.15, 0, 0.05, -0.08],
    [2550, 0.15, 0, 0.05, 0.01], [2580, 0.15, 0, 0.05, 0.28], [2610, 0.15, 0, 0.05, 0.55],
    [2640, 0.15, 0, 0.05, 0.83], [2670, 0.15, 0, 0.05, 1.1], [2700, 0.15, 0, 0.05, 1.37],
    [2730, 0.15, 0, 0.05, 1.64], [2760, 0.15, 0, 0.05, 1.83], [2790, 0.14, 0, 0.05, 2.01],
    [2820, 0.14, 0, 0.05, 2.2], [2850, 0.14, 0, 0.05, 2.39], [2880, 0.14, 0, 0.05, 2.57],
    [2910, 0.12, 0, 0.04, 2.76], [2940, 0.12, 0, 0.04, 2.95], [2970, 0.12, 0, 0.04, 2.84],
    [3000, 0.05, 0, 0, 2.74], [3030, 0.05, 0, 0, 2.64], [3060, 0.05, 0, 0, 2.35], [3090, 0.05, 0, 0, 2.05]
]

# Extract the time and value from the dataset
times = [row[0] for row in data]
values = [row[4] for row in data]

# Create a graph
G = nx.Graph()

# Add nodes to the graph, where each node is a time step
for i, time in enumerate(times):
    G.add_node(time, value=values[i])

# Add edges to the graph based on the sequence of time steps
for i in range(len(times) - 1):
    G.add_edge(times[i], times[i + 1])

# Set node color to black and edge color to black
node_color = 'black'
edge_color = 'black'

# Draw the graph
pos = nx.spring_layout(G, seed=42)  # Layout for the graph (adjust for aesthetic purposes)
plt.figure(figsize=(12, 12))
nx.draw(G, pos, node_size=50, node_color=node_color, edge_color=edge_color, with_labels=False)

# Display the plot
plt.title("Visualization of Data in Black Node Clusters")
plt.show()